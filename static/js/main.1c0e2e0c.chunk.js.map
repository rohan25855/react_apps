{"version":3,"sources":["index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","this","renderSquare","React","Component","Game","state","history","Array","fill","xisNext","stepNumber","slice","setState","concat","step","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"iPAIA,SAASA,EAAgBC,GAWvB,IAVA,IAAMC,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEDC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAI,CAAC,IAAD,cACjBD,EAAMC,GADW,GAC5BE,EAD4B,KACzBC,EADyB,KACtBC,EADsB,KAEnC,GAAIN,EAAQI,IAAMJ,EAAQI,KAAOJ,EAAQK,IACxCL,EAAQI,KAAOJ,EAAQM,GACtB,OAAON,EAAQI,GAGnB,OAAO,KAGT,SAASG,EAAOC,GACd,OACE,4BAAQC,UAAU,SAClBC,QAASF,EAAME,SAEZF,EAAMG,O,IAKPC,E,2KAESV,GAAG,IAAD,OACb,OACE,kBAACK,EAAD,CACEI,MAAOE,KAAKL,MAAMR,QAAQE,GAC1BQ,QAAS,kBAAM,EAAKF,MAAME,QAAQR,Q,+BAMtC,OACE,6BACE,yBAAKO,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,IAErB,yBAAKL,UAAU,aACZI,KAAKC,aAAa,GAClBD,KAAKC,aAAa,GAClBD,KAAKC,aAAa,S,GA3BTC,IAAMC,WAkCpBC,E,kDACJ,WAAYT,GAAO,IAAD,8BAChB,cAAMA,IACDU,MAAQ,CACXC,QAAS,CAAC,CACRnB,QAASoB,MAAM,GAAGC,KAAK,QAEzBC,SAAS,EACTC,WAAY,GAPE,E,wDAWNrB,GACV,IAAMiB,EAAUN,KAAKK,MAAMC,QAAQK,MAAM,EACvCX,KAAKK,MAAMK,WAAW,GAElBvB,EADUmB,EAAQA,EAAQhB,OAAO,GACfH,QAAQwB,QAC7BzB,EAAgBC,IAAYA,EAAQE,KAGvCF,EAAQE,GAAKW,KAAKK,MAAMI,QAAU,IAAM,IACxCT,KAAKY,SAAS,CACZN,QAAUA,EAAQO,OAAO,CAAC,CAAC1B,QAASA,KACpCsB,SAAUT,KAAKK,MAAMI,QACrBC,WAAYJ,EAAQhB,Y,6BAIjBwB,GACLd,KAAKY,SAAS,CACZF,WAAYI,EACZL,QAAUK,EAAO,IAAO,M,+BAInB,IAgBHC,EAhBE,OACAT,EAAUN,KAAKK,MAAMC,QACrBU,EAAUV,EAAQN,KAAKK,MAAMK,YAC7BO,EAAS/B,EAAgB8B,EAAQ7B,SACjC+B,EAASZ,EAAQa,KAAK,SAACL,EAAMM,GACjC,IAAMC,EAAOD,EACX,eAAiBA,EACjB,mBACF,OACE,wBAAIE,IAAKF,GACP,4BAAQvB,QAAW,kBAAM,EAAK0B,OAAOH,KAClCC,OAYT,OALEN,EADCE,EACQ,WAAaA,EAGb,iBAAmBjB,KAAKK,MAAMI,QAAU,IAAM,KAGvD,yBAAKb,UAAU,QACb,yBAAKA,UAAU,cACb,kBAACG,EAAD,CAAOZ,QAAS6B,EAAQ7B,QACxBU,QAAS,SAACR,GAAD,OAAO,EAAKmC,YAAYnC,OAGnC,yBAAKO,UAAU,aACb,6BAAMmB,GACN,4BACGG,S,GApEMhB,IAAMC,WA8EzBsB,IAASC,OACP,kBAACtB,EAAD,MACAuB,SAASC,eAAe,W","file":"static/js/main.1c0e2e0c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction calculateWinner(squares){\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for(let i = 0; i < lines.length; i++){\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] &&\n     squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction Square(props){\n  return(\n    <button className=\"square\" \n    onClick={props.onClick}\n    >\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component{\n\n  renderSquare(i){\n    return(\n      <Square\n        value={this.props.squares[i]} \n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render(){\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      xisNext: true,\n      stepNumber: 0\n    }\n  }\n\n  handleClick(i){\n    const history = this.state.history.slice(0,\n      this.state.stepNumber+1);\n    const current = history[history.length-1];\n    const squares = current.squares.slice();\n    if(calculateWinner(squares) || squares[i]){\n      return;\n    }\n    squares[i] = this.state.xisNext ? 'X' : 'O';\n    this.setState({\n      history : history.concat([{squares: squares}]),\n      xisNext: !this.state.xisNext,\n      stepNumber: history.length\n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xisNext: (step % 2) === 0, \n    });\n  }\n\n  render(){\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves  = history.map( (step, move) => {\n      const desc = move ?\n        'Go to move #' + move : \n        'Go to game start';\n      return(\n        <li key={move}>\n          <button onClick = {() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    let status;\n    if(winner){\n      status = \"Winner: \" + winner;\n    }\n    else{\n      status = \"Next player: \" + (this.state.xisNext ? 'X' : 'O');\n    }\n    return(\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board squares={current.squares} \n          onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>\n            {moves}\n          </ol>\n        </div>\n      </div>\n    );\n  }\n}\n \n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);"],"sourceRoot":""}